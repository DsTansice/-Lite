const url=$request.url,responseBody=$response.body;function info(o){var o=JSON.parse(o),i={name:"Mac",unsupportedDevices:[],minimumSupportedDevice:null};for(const e of o.data.builds)e.platformCompatible=!0,e.hardwareCompatible=!0,e.compatible=!0,e.permission="install",e.compatibilityData.compatibleDeviceFamilies.push(i);let e=o.data.currentBuild;return e.platformCompatible=!0,e.hardwareCompatible=!0,e.compatible=!0,e.permission="install",e.compatibilityData.compatibleDeviceFamilies.push(i),JSON.stringify(o)}function list(o){""===o&&$done({body:o});o=JSON.parse(o);for(const i of o.data)for(const e of i.platforms)"ios"===e.name&&(console.log(e.build.name),e.build.hardwareCompatible=!0,e.build.compatible=!0);return JSON.stringify(o)}function builds(o){o=JSON.parse(o);if(null===o.error)for(const i of o.data)"ios"===i.platform&&(i.compatible=!0);return JSON.stringify(o)}(async()=>{return/.*?\/v3\/accounts\/.+?\/apps$/.test(url)?void $done({body:list(responseBody)}):/.*?\/v2\/accounts\/.+?\/apps\/.+?\/builds\/.+/.test(url)?url.endsWith("install")?(console.log("is install"),void $done({body:responseBody})):void $done({body:info(responseBody)}):void(/.*?\/v2\/accounts\/.+?\/apps\/.+?\/platforms\/ios\/trains\/.+?\/builds/.test(url)&&$done({body:builds(responseBody)}))})().catch(o=>{console.log(o)}).finally(()=>$done());